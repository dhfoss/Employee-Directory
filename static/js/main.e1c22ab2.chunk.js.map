{"version":3,"sources":["reportWebVitals.js","components/Jumbotron/index.js","utils/api.js","components/TableRow/index.js","components/Buttons/index.js","components/SearchBar/index.js","utils/order.js","components/Table/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Jumbotron","className","href","target","getUsers","Promise","resolve","reject","axios","get","res","data","results","catch","err","TableRow","props","num","lastName","firstName","email","city","country","Buttons","orderEmployees","id","onClick","e","SearchBar","sortEmployees","placeholder","onChange","type","orderByLastName","sort","a","b","nameA","name","last","toUpperCase","nameB","Table","useState","employees","setEmployees","lastButtonClicked","setLastButtonClicked","permanentEmployees","setPermanentEmployees","useEffect","order","console","log","employeeArray","value","query","toLowerCase","arr","filter","employee","indexOf","filterEmployees","location","scope","map","index","first","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1c22ab2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Jumbotron = () => {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Employee Directory</h1>\n                <p className=\"lead\">Made with <a href=\"https://reactjs.org/\" target=\"_blank\">React</a>, <a href=\"https://randomuser.me/\" target=\"_blank\">Random User Generator API</a>, and <a href=\"https://www.merriam-webster.com/dictionary/love\" target=\"_blank\">Love</a>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import axios from 'axios';\n\nconst getUsers = () => {\n\n    return new Promise ((resolve, reject) => {\n        axios.get('https://randomuser.me/api/?results=100')\n        .then(res => {\n            resolve(res.data.results)\n        })\n        .catch(err => {\n            reject(err);\n        })\n    })\n}\n// My first attempt at writing a promise.  But it did not have a reject parameter\n// const getUsers = () => {\n//     return new Promise(resolve => {\n//         resolve(\n//             axios.get('https://randomuser.me/api/?results=100')\n//             .then(res => {\n//                 return res.data.results\n//             })\n//         )\n//     })\n// }\n\nexport default getUsers;","import React from 'react';\n\nconst TableRow = props => {\n    return (\n        <tr>\n            <th>{props.num}</th>\n            <td>{props.lastName}</td>\n            <td>{props.firstName}</td>\n            <td>{props.email}</td>\n            <td>{props.city}, {props.country}</td>\n        </tr>\n    )\n}\n\nexport default TableRow;","import React from 'react';\n\nconst Buttons = ({orderEmployees}) => {\n    return (\n        <div className=\"container mb-3\">\n            <button className=\"btn btn-primary mx-3\" id=\"lastNameButton\" onClick={e => orderEmployees(e)}>Sort by Last Name</button>\n            <button className=\"btn btn-primary mx-3\" id=\"emailButton\" onClick={e => orderEmployees(e)}>Sort By Email</button>\n            <button className=\"btn btn-primary mx-3\" id=\"cityButton\" onClick={e => orderEmployees(e)}>Sort By City</button>\n            <button className=\"btn btn-primary mx-3\" id=\"countryButton\" onClick={e => orderEmployees(e)}>Sort By Country</button>\n        </div>\n    )\n}\n\nexport default Buttons;","import React from 'react';\n\nconst SearchBar = ({sortEmployees}) => {\n    return (\n        <div className=\"container mb-3\">\n            <input placeholder=\"Search by Last Name\" onChange={e => sortEmployees(e)} type=\"text\"></input>\n        </div>\n    )\n}\n\nexport default SearchBar;","export const orderByLastName = data => {\n    return data.sort((a, b) => {\n        const nameA = (a.name.last).toUpperCase();\n        const nameB = (b.name.last).toUpperCase();\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n        return 0;\n    });\n};\n\nexport const orderByEmail = data => {\n    return data.sort((a, b) => {\n        const nameA = (a.email).toUpperCase();\n        const nameB = (b.email).toUpperCase();\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n        return 0;\n    });\n};\n\nexport const orderByCity = data => {\n    return data.sort((a, b) => {\n        const nameA = (a.location.city).toUpperCase();\n        const nameB = (b.location.city).toUpperCase();\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n        return 0;\n    });\n};\n\nexport const orderByCountry = data => {\n    return data.sort((a, b) => {\n        const nameA = (a.location.country).toUpperCase();\n        const nameB = (b.location.country).toUpperCase();\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n        return 0;\n    });\n};","import React, { useEffect, useState } from 'react';\nimport getUsers from '../../utils/api';\nimport TableRow from '../TableRow';\nimport Buttons from '../Buttons';\nimport SearchBar from '../SearchBar';\nimport * as order from '../../utils/order';\nimport './Table.css';\n\nconst Table = () => {\n    // const [error, setError] = useState(null);\n    // const [isLoaded, setIsLoaded] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const [lastButtonClicked, setLastButtonClicked] = useState('lastNameButton');\n    const [permanentEmployees, setPermanentEmployees] = useState([]);\n\n    useEffect(() => {\n        getUsers()\n        .then(res => {\n            setEmployees(order.orderByLastName(res));\n            setPermanentEmployees(order.orderByLastName(res));\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, []);\n\n    useEffect(() => {\n        console.log(employees)\n    }, [employees])\n\n\n    useEffect(() => {\n        console.log('Render');\n    }, [lastButtonClicked]);\n\n    const orderEmployees = e => {\n        if (e.target.id === lastButtonClicked) {\n            return;\n        }\n        setLastButtonClicked(e.target.id);\n        const employeeArray = [...employees];\n        switch (e.target.id) {\n            case \"lastNameButton\":\n                setEmployees(order.orderByLastName(employeeArray));\n                break;\n            case \"emailButton\":\n                setEmployees(order.orderByEmail(employeeArray));\n                break;\n            case \"cityButton\":\n                setEmployees(order.orderByCity(employeeArray));\n                break;\n            case \"countryButton\":\n                setEmployees(order.orderByCountry(employeeArray));\n                break;\n            default: \n                break;\n        }\n    }\n\n    const sortEmployees = e => {\n        const employeeArray = [...permanentEmployees];\n        if (!e.target.value) {\n            setEmployees(employeeArray);\n        } else {\n            const query = e.target.value.toLowerCase();\n            const filterEmployees = (arr, query) => {\n                return arr.filter(employee => {\n                    return (\n                        employee.name.last.toLowerCase().indexOf(query) !== -1\n                    )\n                }) \n            }\n            setEmployees(filterEmployees(employeeArray, query));\n        }\n    }\n\n    return (\n        <div className=\"container\" >\n            <SearchBar sortEmployees={sortEmployees} />\n            <Buttons orderEmployees={orderEmployees} />\n\n            <div className=\"table-responsive\">\n                <table className=\"table table-fixed\">\n                    <thead>\n                        <tr>\n                            <th className=\"header\" scope=\"col\">#</th>\n                            <th className=\"header\" scope=\"col\">Last Name</th>\n                            <th className=\"header\" scope=\"col\">First Name</th>\n                            <th className=\"header\" scope=\"col\">Email</th>\n                            <th className=\"header\" scope=\"col\">Location</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {employees.map((employee, index) => (\n                            <TableRow \n                            num={index + 1}\n                            lastName={employee.name.last}\n                            firstName={employee.name.first}\n                            email={employee.email}\n                            city={employee.location.city}\n                            country={employee.location.country}\n                            key={index}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>  \n    );\n}\n\nexport default Table;","import './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Table from './components/Table';\n\nconst App = () => {\n  return (\n    <div className=\"App container mt-3\">\n      <Jumbotron />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}